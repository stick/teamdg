%ol.breadcrumb
  %li
    %a{ href: url("/event/#{@event.id}") } #{@event.name.upcase}
  %li.active Groups

= partial(:_event_nav)

.row
  %h6 Assign each team to a group.
  .col-lg-4
    .panel.panel-default
      .panel-heading
        %strong Available Teams
        %small.pull-right
          - if @event.teams_dataset.where(group_id: nil).to_a.size > 1
            %a{ href: url("/event/#{@event.id}/assign_groups/shuffled") }
              %i.fa.fa-random#assign_teams_shuffle{ data: { toggle: 'tooltip', title: 'Assign teams randomly' } }
            %a{ href: url("/event/#{@event.id}/assign_groups/ordered") }
              %i.fa.fa-columns#assign_teams_ordered{ data: { toggle: 'tooltip', title: 'Assign teams in order' } }
          - else
            %a{ href: url("/event/#{@event.id}/assign_groups/reset") }
              %i.fa.fa-undo#assign_teams_reset{ data: { toggle: 'tooltip', title: 'Unassign all teams' } }
      .panel-body
        .list-group.teamlist#available_teams
          - @event.teams.each do |team|
            - if team.group_id.nil?
              %a.list-group-item.dragable{ data: { name: team.name, id: team.id }, href: url("/team/#{team.id}") } #{team.name}

  - @event.groups.each do |group|
    .col-lg-4
      .panel.panel-default
        .panel-heading
          %span.clickable.change_group_name#spangroup{ id: group.id, data: { id: group.id, name: group.name } }
            %strong #{group.name.capitalize}
            %small
              %i.fa.fa-pencil-square-o
          %span.badge.pull-right#groupsize{ id: group.id } #{group.size}
          %input.change_group_name.hidden#inputgroup{ id: group.id, placeholder: group.name, data: { id: group.id } }
        .panel-body
          .list-group.teamlist#group{ id: group.id, data: { id: group.id, name: group.name } }
            - group.teams.each do |team|
              %a.list-group-item.dragable{ data: { name: team.name, id: team.id }, href: url("/team/#{team.id}") } #{team.name}
            - if group.teams.size < 1
              .list-group-item.holder Drag and drop team

%script{ src: '/bower_components/dragula/dist/dragula.min.js' }
%link{ href: '/bower_components/dragula/dist/dragula.min.css', rel: 'stylesheet' }

:javascript
  $(function () {
    $('[data-toggle="tooltip"]').tooltip();
  });

  var drake = dragula(
    {
      isContainer: function(el) {
        return el.classList.contains('teamlist');
      }
    }
    ).on('drop', function(el, target, source, sibling) {
      if (target == source) { return; }
      // hide the placeholder element
      $(target).children('.holder').hide();

      // save each team when dropped
      $.post('/team/' + el.dataset.id + '/update', { teamname: el.dataset.name, group_name: target.dataset.name, group_id: target.dataset.id });

      var target_badge = Number($('#groupsize_' + target.dataset.id).html()) + 1;
      var source_badge = Number($('#groupsize_' + source.dataset.id).html()) - 1;
      $('#groupsize_' + target.dataset.id).html(target_badge);
      $('#groupsize_' + source.dataset.id).html(source_badge);

      // remove warning icon when lists are equal and available is empty
      if ( $('#available_teams li').length < 1 ) {
        if ( $('#group_1 li').length == $('#group_2 li').length ) {
          $('.fa-exclamation').hide();
          $('.fa-ban').hide();
        }
      }
    });

    $('span.change_group_name').click(function(e) {
      console.log(this);
      $(this).addClass('hidden');
      var input = $("#inputgroup_" + this.dataset.id)
      input.removeClass('hidden').focus();
      console.log('done click');
    });

    $('input.change_group_name').change(function(e) {
      console.log('something changed', e);
      console.log('this: ', this);
      console.log('text: ', $(this).val());
      var new_name = $(this).val();
      // change name
      var span = $('#spangroup_' + this.dataset.id)
      span.html("<strong>" + new_name + "</strong>\n<small><i class='fa fa-pencil-square-o'></i></small>");
      $.post("/group/" + this.dataset.id + "/update", { group_name: new_name });
      span.removeClass('hidden');
      $(this).addClass('hidden');
    });

    $('#assign_teams_shuffle').click(function(e) {
      console.log('shuffle teams and assign');
    });

    $('#assign_teams_ordered').click(function(e) {
      console.log('assign teams in order');
    });
